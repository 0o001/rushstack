// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.
// See LICENSE in the project root for license information.

// This file was generated by a tool. Modifying this file will produce unexpected behavior.
//
// This script is used to install and invoke Rush from a CI definition.

import * as path from 'path';
import * as fs from 'fs';

import {
  installAndRun,
  findRushJsonFolder,
  RUSH_JSON_FILENAME,
  runWithErrorPrinting
} from './install-run-common';

const PACKAGE_NAME: string = '@microsoft/rush';

function getRushVersion(): string {
  const rushJsonDirectory: string = findRushJsonFolder();

  const rushJsonPath: string = path.join(rushJsonDirectory, RUSH_JSON_FILENAME);
  try {
    const rushJsonContents: string = fs.readFileSync(rushJsonPath, 'UTF-8');
    // Use a regular expression to parse out the rushVersion value because rush.json supports comments,
    // but JSON.parse does not and we don't want to pull in more dependencies than we need to in this script.
    const rushJsonMatches: string[] = rushJsonContents.match(/\"rushVersion\"\s*\:\s*\"([0-9a-zA-Z.+\-]+)\"/)!;
    return rushJsonMatches[1];
  } catch (e) {
    throw new Error(
      `Unable to determine the required version of Rush from rush.json (${rushJsonDirectory}). ` +
      'The \'rushVersion\' field is either not assigned in rush.json or was specified ' +
      'using an unexpected syntax.'
    );
  }
}

function run(): void {
  runWithErrorPrinting(() => {
    // tslint:disable-next-line:no-unused-variable
    const [ nodePath, scriptPath, packageBinName, ...packageBinArgs ]: string[] = process.argv;

    const version: string = getRushVersion();
    console.log(`Expected Rush version is ${version}`);

    installAndRun(nodePath, PACKAGE_NAME, version, packageBinName, packageBinArgs);
  });
}

run();
