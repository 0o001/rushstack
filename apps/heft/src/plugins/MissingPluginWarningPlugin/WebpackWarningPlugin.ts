// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.
// See LICENSE in the project root for license information.

import * as path from 'path';
import { Hook } from 'tapable';

import { HeftConfiguration } from '../../configuration/HeftConfiguration';
import { HeftSession } from '../../pluginFramework/HeftSession';
import { ScopedLogger } from '../../pluginFramework/logging/ScopedLogger';
import { IBuildStageContext, IBundleSubstage } from '../../stages/BuildStage';
import { MissingPluginWarningPluginBase } from './MissingPluginWarningPluginBase';

const PLUGIN_NAME: string = 'webpack-warning-plugin';

export class WebpackWarningPlugin extends MissingPluginWarningPluginBase {
  public readonly pluginName: string = PLUGIN_NAME;
  public readonly missingPluginName: string = 'WebpackPlugin';
  public readonly missingPluginCandidatePackageNames: ReadonlyArray<string> = [
    '@rushstack/heft-webpack4-plugin',
    '@rushstack/heft-webpack5-plugin'
  ];
  public readonly missingPluginDocumentationUrl: string = 'https://rushstack.io/pages/heft_tasks/webpack/';

  public apply(heftSession: HeftSession, heftConfiguration: HeftConfiguration): void {
    heftSession.hooks.build.tap(PLUGIN_NAME, (build: IBuildStageContext) => {
      build.hooks.bundle.tap(PLUGIN_NAME, (bundle: IBundleSubstage) => {
        bundle.hooks.run.tapPromise(PLUGIN_NAME, async () => {
          await this.checkForMissingPluginAsync(
            heftConfiguration,
            heftSession,
            bundle.hooks.run,
            !!bundle.properties.webpackConfiguration
          );
        });
      });
    });
  }

  protected getConfigFilePath(heftConfiguration: HeftConfiguration): string {
    return path.join(heftConfiguration.buildFolder, 'webpack.config.js');
  }

  /**
   * @override
   */
  protected async checkForMissingPluginAsync(
    heftConfiguration: HeftConfiguration,
    heftSession: HeftSession,
    hookToTap: Hook<unknown, unknown, unknown, unknown, unknown>,
    webpackConfigurationExists?: boolean
  ): Promise<boolean> {
    const missingPlugin: boolean = await super.checkForMissingPluginAsync(
      heftConfiguration,
      heftSession,
      hookToTap
    );
    if (missingPlugin && webpackConfigurationExists) {
      const logger: ScopedLogger = heftSession.requestScopedLogger(PLUGIN_NAME);
      logger.emitWarning(
        new Error(
          'Your project appears to have a Webpack configuration generated by a plugin, ' +
            'but the Heft plugin for Webpack is not enabled. To fix this, you can add ' +
            `${this.missingPluginCandidatePackageNames
              .map((packageName) => `"${packageName}"`)
              .join(' or ')} ` +
            'to your package.json devDependencies and use config/heft.json to load it. ' +
            `For details, see this documentation: ${this.missingPluginDocumentationUrl}`
        )
      );
    }
    return missingPlugin;
  }
}
