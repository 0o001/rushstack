### YamlMime:UniversalReference
items:
  - uid: 'api-documenter-test!IDocInterface4:interface'
    summary: Type union in an interface.
    name: IDocInterface4
    fullName: IDocInterface4
    langs:
      - typeScript
    type: interface
    package: api-documenter-test!
    children:
      - 'api-documenter-test!IDocInterface4#Context:member'
      - 'api-documenter-test!IDocInterface4#generic:member'
      - 'api-documenter-test!IDocInterface4#numberOrFunction:member'
      - 'api-documenter-test!IDocInterface4#stringOrNumber:member'
  - uid: 'api-documenter-test!IDocInterface4#Context:member'
    summary: Test newline rendering when code blocks are used in tables
    name: Context
    fullName: Context
    langs:
      - typeScript
    type: property
    syntax:
      content: |-
        Context: ({ children }: {
                children: string;
            }) => boolean;
      return:
        type:
          - 'api-documenter-test!IDocInterface4#Context~0:complex'
  - uid: 'api-documenter-test!IDocInterface4#generic:member'
    summary: make sure html entities are escaped in tables.
    name: generic
    fullName: generic
    langs:
      - typeScript
    type: property
    syntax:
      content: 'generic: Generic<number>;'
      return:
        type:
          - 'api-documenter-test!IDocInterface4#generic~0:complex'
  - uid: 'api-documenter-test!IDocInterface4#numberOrFunction:member'
    summary: a union type with a function
    name: numberOrFunction
    fullName: numberOrFunction
    langs:
      - typeScript
    type: property
    syntax:
      content: 'numberOrFunction: number | (() => number);'
      return:
        type:
          - number | (() => number)
  - uid: 'api-documenter-test!IDocInterface4#stringOrNumber:member'
    summary: a union type
    name: stringOrNumber
    fullName: stringOrNumber
    langs:
      - typeScript
    type: property
    syntax:
      content: 'stringOrNumber: string | number;'
      return:
        type:
          - string | number
references:
  - uid: 'api-documenter-test!IDocInterface4#Context~0:complex'
    name: |-
      ({ children }: {
              children: string;
          }) => boolean
    fullName: |-
      ({ children }: {
              children: string;
          }) => boolean
    spec.typeScript:
      - name: '({ '
        fullName: '({ '
      - uid: children
        name: children
        fullName: children
      - name: |2-
           }: {
                  
        fullName: |2-
           }: {
                  
      - uid: children
        name: children
        fullName: children
      - name: |-
          : string;
              }) => boolean
        fullName: |-
          : string;
              }) => boolean
  - uid: 'api-documenter-test!IDocInterface4#generic~0:complex'
    name: Generic<number>
    fullName: Generic<number>
    spec.typeScript:
      - uid: 'api-documenter-test!Generic:class'
        name: Generic
        fullName: Generic
      - name: <number>
        fullName: <number>
