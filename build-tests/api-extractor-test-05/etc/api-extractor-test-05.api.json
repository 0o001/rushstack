{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.0.5",
    "schemaVersion": 1000
  },
  "kind": "Package",
  "name": "api-extractor-test-05",
  "canonicalReference": "api-extractor-test-05",
  "docComment": "/**\n * api-extractor-test-05\n *\n * This project tests various documentation generation scenarios and doc comment syntaxes.\n *\n * @packagedocumentation\n */\n",
  "members": [
    {
      "kind": "EntryPoint",
      "name": "",
      "canonicalReference": "",
      "members": [
        {
          "kind": "Class",
          "name": "DocBaseClass",
          "canonicalReference": "(DocBaseClass:class)",
          "docComment": "/**\n * Example base class\n *\n * @public\n */\n",
          "releaseTag": "Public",
          "members": [],
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class "
            },
            {
              "kind": "Reference",
              "text": "DocBaseClass"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "name": "DocClass1",
          "canonicalReference": "(DocClass1:class)",
          "docComment": "/**\n * This is an example class.\n *\n * @remarks\n *\n * These are some remarks.\n *\n * @defaultvalue\n *\n * a default value for this function\n *\n * @public\n */\n",
          "releaseTag": "Public",
          "members": [
            {
              "kind": "Method",
              "name": "deprecatedExample",
              "canonicalReference": "(deprecatedExample:instance,0)",
              "docComment": "/**\n * @deprecated\n *\n * Use `otherThing()` instead.\n */\n",
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [],
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "deprecatedExample"
                },
                {
                  "kind": "Content",
                  "text": "(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "name": "exampleFunction",
              "canonicalReference": "(exampleFunction:instance,0)",
              "docComment": "/**\n * This is an overloaded function.\n *\n * @param a - the first string\n *\n * @param b - the second string\n */\n",
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "kind": "Parameter",
                  "name": "a",
                  "canonicalReference": "a",
                  "excerptTokens": [
                    {
                      "kind": "Reference",
                      "text": "a"
                    },
                    {
                      "kind": "Content",
                      "text": ": "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    }
                  ],
                  "parameterTypeTokenRange": {
                    "startIndex": 2,
                    "endIndex": 3
                  }
                },
                {
                  "kind": "Parameter",
                  "name": "b",
                  "canonicalReference": "b",
                  "excerptTokens": [
                    {
                      "kind": "Reference",
                      "text": "b"
                    },
                    {
                      "kind": "Content",
                      "text": ": "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    }
                  ],
                  "parameterTypeTokenRange": {
                    "startIndex": 2,
                    "endIndex": 3
                  }
                }
              ],
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "exampleFunction"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "a"
                },
                {
                  "kind": "Content",
                  "text": ": string, "
                },
                {
                  "kind": "Reference",
                  "text": "b"
                },
                {
                  "kind": "Content",
                  "text": ": string): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "name": "exampleFunction",
              "canonicalReference": "(exampleFunction:instance,1)",
              "docComment": "/**\n * This is also an overloaded function.\n *\n * @param x - the number\n */\n",
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "kind": "Parameter",
                  "name": "x",
                  "canonicalReference": "x",
                  "excerptTokens": [
                    {
                      "kind": "Reference",
                      "text": "x"
                    },
                    {
                      "kind": "Content",
                      "text": ": "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    }
                  ],
                  "parameterTypeTokenRange": {
                    "startIndex": 2,
                    "endIndex": 3
                  }
                }
              ],
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "exampleFunction"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "x"
                },
                {
                  "kind": "Content",
                  "text": ": number): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "name": "interestingEdgeCases",
              "canonicalReference": "(interestingEdgeCases:instance,0)",
              "docComment": "/**\n * Example: \"\\{ \\\\\"maxItemsToShow\\\\\": 123 \\}\"\n *\n * The regular expression used to validate the constraints is /^[a-zA-Z0-9\\\\-_]+$/\n */\n",
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [],
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "interestingEdgeCases"
                },
                {
                  "kind": "Content",
                  "text": "(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "name": "malformedEvent",
              "canonicalReference": "(malformedEvent:instance)",
              "docComment": "/**\n * This event should have been marked as readonly.\n *\n * @eventproperty\n */\n",
              "releaseTag": "Public",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "malformedEvent"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "SystemEvent"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "name": "modifiedEvent",
              "canonicalReference": "(modifiedEvent:instance)",
              "docComment": "/**\n * This event is fired whenever the object is modified.\n *\n * @eventproperty\n */\n",
              "releaseTag": "Public",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "modifiedEvent"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "SystemEvent"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "name": "regularProperty",
              "canonicalReference": "(regularProperty:instance)",
              "docComment": "/**\n * This is a regular property that happens to use the SystemEvent type.\n */\n",
              "releaseTag": "Public",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "regularProperty"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "SystemEvent"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "name": "sumWithExample",
              "canonicalReference": "(sumWithExample:static,0)",
              "docComment": "/**\n * Returns the sum of two numbers.\n *\n * @remarks\n *\n * This illustrates usage of the `@example` block tag.\n *\n * @param x - the first number to add\n *\n * @param y - the second number to add\n *\n * @returns the sum of the two numbers\n *\n * @example\n *\n * Here's a simple example:\n * ```\n * // Prints \"2\":\n * console.log(DocClass1.sumWithExample(1,1));\n * ```\n *\n * @example\n *\n * Here's an example with negative numbers:\n * ```\n * // Prints \"0\":\n * console.log(DocClass1.sumWithExample(1,-1));\n * ```\n *\n */\n",
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "kind": "Parameter",
                  "name": "x",
                  "canonicalReference": "x",
                  "excerptTokens": [
                    {
                      "kind": "Reference",
                      "text": "x"
                    },
                    {
                      "kind": "Content",
                      "text": ": "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    }
                  ],
                  "parameterTypeTokenRange": {
                    "startIndex": 2,
                    "endIndex": 3
                  }
                },
                {
                  "kind": "Parameter",
                  "name": "y",
                  "canonicalReference": "y",
                  "excerptTokens": [
                    {
                      "kind": "Reference",
                      "text": "y"
                    },
                    {
                      "kind": "Content",
                      "text": ": "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    }
                  ],
                  "parameterTypeTokenRange": {
                    "startIndex": 2,
                    "endIndex": 3
                  }
                }
              ],
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static "
                },
                {
                  "kind": "Reference",
                  "text": "sumWithExample"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "x"
                },
                {
                  "kind": "Content",
                  "text": ": number, "
                },
                {
                  "kind": "Reference",
                  "text": "y"
                },
                {
                  "kind": "Content",
                  "text": ": number): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "isStatic": true
            },
            {
              "kind": "Method",
              "name": "tableExample",
              "canonicalReference": "(tableExample:instance,0)",
              "docComment": "/**\n * An example with tables:\n *\n * @remarks\n *\n * <table> <tr> <td>John</td> <td>Doe</td> </tr> </table>\n */\n",
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [],
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "tableExample"
                },
                {
                  "kind": "Content",
                  "text": "(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "isStatic": false
            }
          ],
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class "
            },
            {
              "kind": "Reference",
              "text": "DocClass1"
            },
            {
              "kind": "Content",
              "text": " extends "
            },
            {
              "kind": "Reference",
              "text": "DocBaseClass"
            },
            {
              "kind": "Content",
              "text": " "
            },
            {
              "kind": "Content",
              "text": "implements "
            },
            {
              "kind": "Reference",
              "text": "IDocInterface1"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "IDocInterface2"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "extendsTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          },
          "implementsTokenRanges": [
            {
              "startIndex": 6,
              "endIndex": 7
            },
            {
              "startIndex": 8,
              "endIndex": 10
            }
          ]
        },
        {
          "kind": "Enum",
          "name": "DocEnum",
          "canonicalReference": "(DocEnum:enum)",
          "docComment": "/**\n * Docs for DocEnum\n *\n * @public\n */\n",
          "releaseTag": "Public",
          "members": [
            {
              "kind": "EnumMember",
              "name": "One",
              "canonicalReference": "One",
              "docComment": "/**\n * These are some docs for One\n */\n",
              "releaseTag": "Public",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "One"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "1"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "EnumMember",
              "name": "Two",
              "canonicalReference": "Two",
              "docComment": "/**\n * These are some docs for Two\n */\n",
              "releaseTag": "Public",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "Two"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "2"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "EnumMember",
              "name": "Zero",
              "canonicalReference": "Zero",
              "docComment": "/**\n * These are some docs for Zero\n */\n",
              "releaseTag": "Public",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "Zero"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "0"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            }
          ],
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum "
            },
            {
              "kind": "Reference",
              "text": "DocEnum"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ]
        },
        {
          "kind": "Interface",
          "name": "IDocInterface1",
          "canonicalReference": "(IDocInterface1:interface)",
          "docComment": "/**\n * @public\n */\n",
          "releaseTag": "Public",
          "members": [
            {
              "kind": "PropertySignature",
              "name": "regularProperty",
              "canonicalReference": "regularProperty",
              "docComment": "/**\n * Does something\n */\n",
              "releaseTag": "Public",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "regularProperty"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "SystemEvent"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            }
          ],
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface "
            },
            {
              "kind": "Reference",
              "text": "IDocInterface1"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "name": "IDocInterface2",
          "canonicalReference": "(IDocInterface2:interface)",
          "docComment": "/**\n * @public\n */\n",
          "releaseTag": "Public",
          "members": [
            {
              "kind": "MethodSignature",
              "name": "deprecatedExample",
              "canonicalReference": "(deprecatedExample:0)",
              "docComment": "/**\n * @deprecated\n *\n * Use `otherThing()` instead.\n */\n",
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [],
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "deprecatedExample"
                },
                {
                  "kind": "Content",
                  "text": "(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            }
          ],
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface "
            },
            {
              "kind": "Reference",
              "text": "IDocInterface2"
            },
            {
              "kind": "Content",
              "text": " extends "
            },
            {
              "kind": "Reference",
              "text": "IDocInterface1"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 3,
              "endIndex": 5
            }
          ]
        },
        {
          "kind": "Class",
          "name": "SystemEvent",
          "canonicalReference": "(SystemEvent:class)",
          "docComment": "/**\n * A class used to exposed events.\n *\n * @public\n */\n",
          "releaseTag": "Public",
          "members": [
            {
              "kind": "Method",
              "name": "addHandler",
              "canonicalReference": "(addHandler:instance,0)",
              "docComment": "/**\n * Adds an handler for the event.\n */\n",
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "kind": "Parameter",
                  "name": "handler",
                  "canonicalReference": "handler",
                  "excerptTokens": [
                    {
                      "kind": "Reference",
                      "text": "handler"
                    },
                    {
                      "kind": "Content",
                      "text": ": "
                    },
                    {
                      "kind": "Content",
                      "text": "() => void"
                    }
                  ],
                  "parameterTypeTokenRange": {
                    "startIndex": 2,
                    "endIndex": 3
                  }
                }
              ],
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "addHandler"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "handler"
                },
                {
                  "kind": "Content",
                  "text": ": () => void): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "isStatic": false
            }
          ],
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class "
            },
            {
              "kind": "Reference",
              "text": "SystemEvent"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "implementsTokenRanges": []
        }
      ]
    }
  ]
}
